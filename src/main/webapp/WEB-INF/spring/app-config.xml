<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- [internationalization-config] -->
    <!-- Spring can reach message's files using this class and will add '_' to resource bundle -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:app-messages/messages"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- Interceptor that capture what language client is using -->
    <bean id="localeChangeInterceptor"
          class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang"/>
    </bean>

    <!-- Looks for a cookie in client that specifies yours locale.
        In this example it defines a default locale
      -->
    <bean id="cookieLocaleResolver"
          class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="en"/>
    </bean>

    <!-- We're using annotations to mapping requests (e.g. @Controller).
         So, we need to pass out localeChangeInterceptor to it.  -->
    <bean id="handlerMapping"
          class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <ref bean="localeChangeInterceptor"/>
        </property>
    </bean>
    <!-- [/internationalization-config] -->

</beans>